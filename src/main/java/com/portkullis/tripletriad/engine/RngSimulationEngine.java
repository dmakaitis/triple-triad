package com.portkullis.tripletriad.engine;

import com.portkullis.tripletriad.engine.impl.RngSimulationEngineImpl;
import com.portkullis.tripletriad.engine.model.Rule;

/**
 * Interface to a RNG simulator that simulates the RNG from the PS version of FF8.
 */
public interface RngSimulationEngine {

    /**
     * Resets the RNG (simulates a hard reset).
     */
    void reset();

    /**
     * Returns the next random value from the RNG simulator.
     *
     * @return the next random value from the RNG simulator.
     * @throws IndexOutOfBoundsException if no more random values are available.
     */
    int getNextValue();

    /**
     * Returns the next Triple Triad rule that would be generated by the RNG.
     *
     * @return the next Triple Triad rule that would be generated by the RNG.
     */
    Rule getNextRule();

    /**
     * Returns {@code true} if the next random value indicates that a rule can be abolished.
     *
     * @return {@code true} if the next random value indicates that a rule can be abolished; {@code false} otherwise.
     */
    boolean getNextAbolishFlag();

    /**
     * Returns an instance of the RNG simulation engine.
     *
     * @return an instance of the RNG simulation engine.
     */
    static RngSimulationEngine getInstance() {
        return new RngSimulationEngineImpl();
    }

}
